@use "sass:list";
@use "animations" as *;

@mixin load-root
{
    :root
    {
        --animate-duration: 1s;
        --animate-delay: 1s;
        --animate-repeat: 1;
    }
}


@mixin basic-classes($prefix: $prefix)
{
    $animated: ".#{$prefix}animated";


    @each $class in $animations
    {
        #{$prefix}#{$class}
        {
            @extend %#{$class};
        }
    }



    #{$animated}
    {
        animation-duration: var(--animate-duration) !important;
        animation-fill-mode: both !important;
    }

    #{$animated}.#{$prefix}infinite
    {
        animation-iteration-count: infinite !important;
    }

    @for $i from 1 through 3
    {
        #{$animated}.#{$prefix}repeat-#{$i}
        {
            animation-iteration-count: calc(var(--animate-repeat) * $i) !important;
        }
    }

    @for $i from 1 through 5
    {
        #{$animated}.#{$prefix}delay-#{$i}s
        {
            animation-delay: calc(var(--animate-delay) * $i) !important;
        }
    }


    #{$animated}.#{$prefix}faster
    {
        animation-duration: calc(var(--animate-duration) / 2) !important;
    }

    #{$animated}.#{$prefix}fast
    {
        animation-duration: calc(var(--animate-duration) * 0.8) !important;
    }

    #{$animated}.#{$prefix}slow
    {
        animation-duration: calc(var(--animate-duration) * 2) !important;
    }

    #{$animated}.#{$prefix}slower
    {
        animation-duration: calc(var(--animate-duration) * 3) !important;
    }


    @media print,
    (prefers-reduced-motion: reduce)
    {
        #{$animated}
        {
            animation-duration: 1ms !important;
            transition-duration: 1ms !important;
            animation-iteration-count: 1 !important;
        }

        #{$animated}[class*='Out']
        {
            opacity: 0;
        }
    }
}